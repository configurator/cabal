#!/bin/bash
# cabal command line completion
# Copyright 2007-2008 "Lennart Kolmodin" <kolmodin at gentoo.org>
#                     "Duncan Coutts"     <dcoutts at gentoo.org>
#

# returns packages from cabal list
# usage: _cabal_packages prefix [versions] [installed]
_cabal_packages() {
	local prefix="$1"
	shift

    local versions=false # print packages and versions? ie. foo-0.42
    local installed=false # only print installed packages?
    while [[ -n "$1" ]]; do
        case "$1" in
            versions)
                versions=true ;;
            installed)
                installed=true ;;
        esac
        shift
    done

    local cmd="cabal list --simple-output"
    if $installed; then
        cmd="$cmd --installed"
    fi

    # save 'cabal list' output to a temporary file
    # putting it in a variable would mess up the lines
    local parse
    if $versions; then
    	parse='s#^(.*) (.*)$#\1\n\1-\2#'
    else
    	parse='s# .*$##'
    fi
    
    $cmd "$prefix" | grep "^$prefix" | sed -r -e "$parse" | sort -u
}

_cabal_commands()
{
    # this is already quite fast, and caching does not give a speedup
    # 3-4ms
    for word in $( cabal --list-options ); do
        case $word in
            -*)
                # ignore flags
                continue;;
            *)
                echo $word ;;
        esac
    done
}

_cabal() {
    # get the word currently being completed
    local cur="${COMP_WORDS[$COMP_CWORD]}"

    # create a command line to run
    # copy all words the user has entered
    local cmd=( "${COMP_WORDS[@]}" )
    # replace the current word with --list-options
    cmd[${COMP_CWORD}]="--list-options"

    # find the action being completed
    local action="unknown"
    for cword in "${COMP_WORDS[@]}"; do
        for act in $( _cabal_commands ); do
            if [[ "$cword" == "$act" ]]; then
                action="$act"
            fi
        done
    done

    # if non empty, we will pass this to _cabal_packages and add the result
    # to the completing words
    local complete_packages
    for cword in ${COMP_WORDS[*]}; do
        case $cword in
            --installed)
                # the user is interested only in installed packages
                complete_packages="$complete_packages installed"
        esac
    done

    case $action in
        install|list|upgrade|fetch)
            if [[ "$cword" != -* ]]; then
                # don't complete with packages if the user is trying to
                # complete a flag
                complete_packages="$complete_packages packages"
                if [[ "$cword" == *-*([0-9.]) ]]; then
                    # if the user tries to complete with a version, help by
                    # completing them too
                    complete_packages="$complete_packages versions"
                fi
            fi
            
            ;;
    esac

    COMPREPLY=( $( compgen -W "$( ${cmd[@]} )" -- $cur ) )

    if [[ -n "$complete_packages" ]]; then
        COMPREPLY+=( $(_cabal_packages "$cur" $complete_packages) )
    fi
}

complete -F _cabal -o default cabal
